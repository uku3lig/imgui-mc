plugins {
    id "fabric-loom" version "1.1-SNAPSHOT"
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation "io.github.spair:imgui-java-binding:${project.imguiVersion}"
    shadow "io.github.spair:imgui-java-binding:${project.imguiVersion}"
    implementation "io.github.spair:imgui-java-lwjgl3:${project.imguiVersion}"
    shadow "io.github.spair:imgui-java-lwjgl3:${project.imguiVersion}"

    implementation "io.github.spair:imgui-java-natives-windows:${project.imguiVersion}"
    shadow "io.github.spair:imgui-java-natives-windows:${project.imguiVersion}"
    implementation "io.github.spair:imgui-java-natives-linux:${project.imguiVersion}"
    shadow "io.github.spair:imgui-java-natives-linux:${project.imguiVersion}"
    implementation "io.github.spair:imgui-java-natives-macos:${project.imguiVersion}"
    shadow "io.github.spair:imgui-java-natives-macos:${project.imguiVersion}"
}

tasks.processResources {
    inputs.property("version", project.version)
    filteringCharset = "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier = "shadow"
    dependencies {
        exclude(dependency('org.lwjgl:lwjgl'))
        exclude(dependency('org.lwjgl:lwjgl-glfw'))
        exclude(dependency('org.lwjgl:lwjgl-opengl'))
    }
}

remapJar {
    dependsOn shadowJar
    inputFile.set(shadowJar.archiveFile)

    archiveClassifier = null
}

/*
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(jar.archivePath) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                 builtBy remapSourcesJar
            }
        }
    }
    repositories {
        maven {
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
            name = 'breadloaf.public'
            url = 'https://maven.breadloaf.xyz/repository/public'
        }

    }
}

 */